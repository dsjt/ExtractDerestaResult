#+TITLE: ExtractDerestaResult
#+TODO: TODO(t) DOING | DONE(d) CANC(c) LOG(l!)
#+CATEGORY: デレステER
* 概要
課題等をリストアップしておく。
** タグの意味
TODO: やるべきこと
DOING: 作業中
DONE: 完了
CANC: 中止
LOG: 上記に該当しないが残しておくタスク
* いつでもとりかかること                                            :Project:
** DONE 関数へのコメント追加
CLOSED: [2018-04-11 水 05:54]
** CANC ロジスティック回帰を用いる方法へ変更
CLOSED: [2018-04-11 水 05:54]
現状、ロジスティック回帰を使えるモデルではなく、k=1のK近傍法である。
モデルを使い分けられるようにするのはありだ。
** DONE 依存関係を明らかにする
CLOSED: [2018-04-24 火 06:11]
要は、venvを使うことと、freezeの出力を表示しておくこと。
** DONE ライセンス周りの解決
CLOSED: [2018-05-03 木 09:26]
各種ライブラリのライセンスを調べる必要がある

そもそも再配布するわけでもなく、派生バージョンというわけでもない。
インポートするだけなら、必要ないらしい。
*** beautifulsoup4==4.6.0
MITライセンス
BSDスタイルのライセンスのひとつらしい。
https://ja.wikipedia.org/wiki/MIT_License
*** numpy==1.14.2
修正BSDライセンス
*** pandas==0.22.0
*** Pillow==5.1.0
** 様々なモデルを使い分けられるように
アンサンブル学習できることが望ましい？
切り出しのずれ以外は、考慮する必要がないか？
*** DONE scikit-learnよりKNNを採用し利用可能に
CLOSED: [2018-05-06 日 12:00]
*** DONE 他の分類方法を探る
CLOSED: [2018-05-27 日 08:13]
現状、0を1としたり、8を6としたりしてる。
もっとよくならないか。
→てかり対策として、青だけ見るようにしたところ、改善した。
*** CANC ニューラルネットワークによる分類
CLOSED: [2018-06-23 土 16:03]
畳み込みはわりと有力なはず。（明らかに大きすぎる道具だが）
→そこまで精度が低くない（当社比）
** DONE テストの整理
CLOSED: [2018-05-06 日 12:51]
- 出力をCSVへ
- テストデータの正解を作る
- テスト可能に
** DONE 分類確率をログファイルに出力する
CLOSED: [2018-05-06 日 13:51]
** DONE データの収集
CLOSED: [2018-05-27 日 08:12]
いろいろなモデルを試すためには、リザルト画面のデータが必要
*** DONE リザルト画面から数字データを収集するスクリプト
CLOSED: [2018-05-27 日 08:12]
** CANC オブジェクト検出っぽく、多少のズレを吸収できるものづくりを試みる
CLOSED: [2018-06-23 土 16:00]
ひとつのことをひとつのプログラムで。
もしオブジェクト検出を行いたいのであれば、.crop_box.jsonを自動生成するプログラムを作ること。
** DONE プログラム整理
CLOSED: [2018-06-23 土 16:23]
今後の方向性を踏まえ、UI部分とアルゴリズム部分を分離するなどプログラムの整理を。
** DONE 終わりに向けて
CLOSED: [2018-06-23 土 16:23]
プロジェクトを一段落させることへ向けて、最後にやっておくべきことをまとめる
* いつかやること
** 別のプログラムとして、.crop_box.jsonを自動生成するプログラムを作ること
** CNNなどで識別させること
